{
  "title": "PipelineState",
  "description": "Describes the current state of a pipeline.\n\nThis includes the structure of the pipeline (how the internal modules/steps are connected to each other), as well\nas all current input/output values for the pipeline itself, as well as for all internal steps.\n\nUse the ``dict`` or ``json`` methods to convert this object into a generic data structure.",
  "type": "object",
  "properties": {
    "structure": {
      "title": "Structure",
      "description": "The structure (interconnections of modules/steps) of the pipeline.",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineStructureDesc"
        }
      ]
    },
    "pipeline_inputs": {
      "title": "Pipeline Inputs",
      "description": "The current (externally facing) input values of this pipeline.",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineValues"
        }
      ]
    },
    "pipeline_outputs": {
      "title": "Pipeline Outputs",
      "description": "The current (externally facing) output values of this pipeline.",
      "allOf": [
        {
          "$ref": "#/definitions/PipelineValues"
        }
      ]
    },
    "step_inputs": {
      "title": "Step Inputs",
      "description": "The current (internal) input values of each step of this pipeline.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/PipelineValues"
      }
    },
    "step_outputs": {
      "title": "Step Outputs",
      "description": "The current (internal) output values of each step of this pipeline.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/PipelineValues"
      }
    },
    "status": {
      "description": "The current overal status of the pipeline.",
      "allOf": [
        {
          "$ref": "#/definitions/StepStatus"
        }
      ]
    }
  },
  "required": [
    "structure",
    "pipeline_inputs",
    "pipeline_outputs",
    "step_inputs",
    "step_outputs",
    "status"
  ],
  "definitions": {
    "StepValueAddress": {
      "title": "StepValueAddress",
      "description": "Small model to describe the address of a value of a step, within a Pipeline/PipelineStructure.",
      "type": "object",
      "properties": {
        "step_id": {
          "title": "Step Id",
          "description": "The id of a step within a pipeline.",
          "type": "string"
        },
        "value_name": {
          "title": "Value Name",
          "description": "The name of the value (output name or pipeline input name).",
          "type": "string"
        },
        "sub_value": {
          "title": "Sub Value",
          "description": "A reference to a subitem of a value (e.g. column, list item)",
          "type": "string"
        }
      },
      "required": [
        "step_id",
        "value_name"
      ],
      "additionalProperties": false
    },
    "PipelineStep": {
      "title": "PipelineStep",
      "description": "A step within a pipeline-structure, includes information about it's connection(s) and other metadata.",
      "type": "object",
      "properties": {
        "step_id": {
          "title": "Step Id",
          "type": "string"
        },
        "parent_id": {
          "title": "Parent Id",
          "type": "string"
        },
        "module_type": {
          "title": "Module Type",
          "description": "The module type.",
          "type": "string"
        },
        "module_config": {
          "title": "Module Config",
          "description": "The module config.",
          "type": "object"
        },
        "processing_stage": {
          "title": "Processing Stage",
          "description": "The stage number this step is executed within the pipeline.",
          "type": "integer"
        },
        "input_links": {
          "title": "Input Links",
          "description": "The links that connect to inputs of the module.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StepValueAddress"
            }
          }
        }
      },
      "required": [
        "step_id",
        "parent_id",
        "module_type"
      ],
      "additionalProperties": false
    },
    "StepDesc": {
      "title": "StepDesc",
      "description": "Details of a single [PipelineStep][kiara.pipeline.structure.PipelineStep] (which lives within a [Pipeline][kiara.pipeline.pipeline.Pipeline]",
      "type": "object",
      "properties": {
        "step": {
          "title": "Step",
          "description": "Attributes of the step itself.",
          "allOf": [
            {
              "$ref": "#/definitions/PipelineStep"
            }
          ]
        },
        "processing_stage": {
          "title": "Processing Stage",
          "description": "The processing stage of this step within a Pipeline.",
          "type": "integer"
        },
        "input_connections": {
          "title": "Input Connections",
          "description": "A map that explains what elements connect to this steps inputs. A connection could either be a Pipeline input (indicated by the '__pipeline__' token), or another steps output.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "output_connections": {
          "title": "Output Connections",
          "description": "A map that explains what elemnts connect to this steps outputs. A connection could be either a Pipeline output, or another steps input.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "step",
        "processing_stage",
        "input_connections",
        "output_connections"
      ],
      "additionalProperties": false
    },
    "PipelineStructureDesc": {
      "title": "PipelineStructureDesc",
      "description": "Outlines the internal structure of a [Pipeline][kiara.pipeline.pipeline.Pipeline].",
      "type": "object",
      "properties": {
        "pipeline_id": {
          "title": "Pipeline Id",
          "description": "The (unique) pipeline id.",
          "type": "string"
        },
        "steps": {
          "title": "Steps",
          "description": "The steps contained in this pipeline, with the 'step_id' as key.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StepDesc"
          }
        },
        "processing_stages": {
          "title": "Processing Stages",
          "description": "The order in which this pipeline has to be processed (basically the dependencies of each step on other steps, if any).",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "pipeline_input_connections": {
          "title": "Pipeline Input Connections",
          "description": "The connections of this pipelines input fields. One input field can be connected to one or several step input fields.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "pipeline_output_connections": {
          "title": "Pipeline Output Connections",
          "description": "The connections of this pipelines output fields. Each pipeline output is connected to exactly one step output field.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "pipeline_id",
        "steps",
        "processing_stages",
        "pipeline_input_connections",
        "pipeline_output_connections"
      ],
      "additionalProperties": false
    },
    "ValueType": {
      "title": "ValueType",
      "description": "Supported value types.\n\nIt's very early days, so this does not really do anything yet.",
      "enum": [
        "any",
        "integer",
        "string",
        "dict",
        "boolean",
        "table",
        "value_items"
      ]
    },
    "ValueSchema": {
      "title": "ValueSchema",
      "description": "The schema of a value.\n\nThe schema contains the [ValueType][kiara.data.values.ValueType] of a value, as well as an optional default that\nwill be used if no user input was given (yet) for a value.\n\nFor more complex types like arrays and tables, a sub-schema will be available (e.g. columns of a table, type of\nthe array-items, ...). This bit is not implemented yet.",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ValueType"
        },
        "doc": {
          "title": "Doc",
          "description": "A description for the value of this input field.",
          "default": "-- n/a --",
          "type": "string"
        },
        "default": {
          "title": "Default",
          "description": "A default value."
        },
        "sub_schema": {
          "title": "Sub Schema",
          "description": "In case this schemas type is a container type (list, dict, ...), this field specifies the schema of its content.",
          "anyOf": [
            {
              "$ref": "#/definitions/ValueSchema"
            },
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValueSchema"
              }
            }
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "PipelineValue": {
      "title": "PipelineValue",
      "description": "Convenience wrapper to make the [PipelineState][kiara.pipeline.pipeline.PipelineState] json/dict export prettier.",
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "A unique id for this value.",
          "type": "string"
        },
        "is_valid": {
          "title": "Is Valid",
          "description": "Whether the value is set and valid.",
          "default": false,
          "type": "boolean"
        },
        "value_schema": {
          "title": "Value Schema",
          "description": "The schema of this value.",
          "allOf": [
            {
              "$ref": "#/definitions/ValueSchema"
            }
          ]
        },
        "is_constant": {
          "title": "Is Constant",
          "description": "Whether this value is a constant.",
          "default": false,
          "type": "boolean"
        },
        "origin": {
          "title": "Origin",
          "description": "Description of how/where the value was set.",
          "default": "n/a",
          "type": "string"
        },
        "last_update": {
          "title": "Last Update",
          "description": "The time the last update to this value happened.",
          "type": "string",
          "format": "date-time"
        },
        "is_streaming": {
          "title": "Is Streaming",
          "description": "Whether the value is currently streamed into this object.",
          "default": false,
          "type": "boolean"
        },
        "metadata": {
          "title": "Metadata",
          "description": "Metadata relating to the actual data (size, no. of rows, etc. -- depending on data type).",
          "type": "object"
        }
      },
      "required": [
        "id",
        "value_schema"
      ],
      "additionalProperties": false
    },
    "PipelineValues": {
      "title": "PipelineValues",
      "description": "Convenience wrapper to make the [PipelineState][kiara.pipeline.pipeline.PipelineState] json/dict export prettier.\n\nThis is basically just a simplified version of the [ValueSet][kiara.data.values.ValueSet] class that is using\npydantic, in order to make it easy to export to json.",
      "type": "object",
      "properties": {
        "values": {
          "title": "Values",
          "description": "Field names are keys, and the data as values.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PipelineValue"
          }
        }
      },
      "required": [
        "values"
      ]
    },
    "StepStatus": {
      "title": "StepStatus",
      "description": "Enum to describe the state of a workflow.",
      "enum": [
        "stale",
        "inputs_ready",
        "processing",
        "results_ready"
      ]
    }
  }
}